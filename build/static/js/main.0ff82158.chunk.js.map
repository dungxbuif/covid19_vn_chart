{"version":3,"sources":["apis/axiosClient.js","components/HighLightCard.js","components/HighLight.js","components/Charts/LineChart.js","components/Charts/HighMaps.js","apis/index.js","components/Summary.js","components/TableVaccine.js","App.js","index.js"],"names":["instance","axios","create","baseURL","headers","api_key","useStyles","makeStyles","wrapper","props","type","borderLeft","title","fontSize","marginBottom","count","fontWeight","HighLightCard","styles","Card","className","CardContent","Typography","components","variant","end","duration","separator","HighLight","history","data","length","summary","Confirmed","Recovered","Deaths","Grid","container","spacing","map","item","sm","xs","LineChart","kind","useState","options","setOptions","reportType","setReportType","useEffect","customData","slice","findIndex","Date","categories","text","series","chart","height","xAxis","crosshair","colors","yAxis","min","labels","align","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","name","generateOptions","ButtonGroup","size","style","display","justifyContent","Button","color","onClick","highcharts","HighCharts","React","memo","highchartsMap","Highcharts","initOptions","mapNavigation","enabled","legend","defaultOptions","y","x","verticalAlign","floating","layout","valueDecimals","backgroundColor","symbolRadius","symbolHeight","colorAxis","dataClassColor","dataClasses","from","to","joinBy","HighMaps","mapData","mapLoaded","setMapLoaded","chartRef","useRef","Object","keys","get","then","res","detailData","current","update","cloneDeep","constructorType","ref","defaultProps","Summary","perday","useRowStyles","root","borderBottom","Row","row","classes","TableRow","TableCell","component","scope","tinh","danso","tiemmui1","tiemmui2","tongmuidatiem","tongsovaccineduocphan","sodiemtiem","soloaivaccinephanphoi","TableVaccine","vaccine","tmpDdata","_","orderBy","TableContainer","Paper","Table","aria-label","TableHead","TableBody","matinh","moment","locale","App","setHistory","setPerDay","setVaccine","Container","marginTop","format","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAOeA,E,OALEC,EAAMC,OAAO,CAC3BC,QAAS,kDACTC,QAAS,CAAEC,QAAS,uB,4DCAjBC,EAAYC,YAAW,CAC1BC,QAAS,SAACC,GACP,OAAQA,EAAMC,MACX,IAAK,YACF,MAAO,CAAEC,WAAY,qBACxB,IAAK,YACF,MAAO,CAAEA,WAAY,qBACxB,QACG,MAAO,CAAEA,WAAY,oBAG9BC,MAAO,CACJC,SAAU,GACVC,aAAc,GAEjBC,MAAO,CACJC,WAAY,OACZH,SAAU,MAID,SAASI,EAAT,GAAgD,IAAvBL,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,MAAOL,EAAQ,EAARA,KAC7CQ,EAASZ,EAAU,CAAEI,SAE3B,OACG,cAACS,EAAA,EAAD,CAAMC,UAAWF,EAAOV,QAAxB,SACG,eAACa,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,CAAYC,WAAW,IAAIC,QAAQ,QAAQJ,UAAWF,EAAON,MAA7D,SACIA,IAEJ,cAACU,EAAA,EAAD,CACGC,WAAW,OACXC,QAAQ,QACRJ,UAAWF,EAAOH,MAHrB,SAKG,cAAC,IAAD,CAASU,IAAKV,GAAS,EAAGW,SAAU,EAAGC,UAAU,a,aCnCjD,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAC5BC,EAAOD,GAAWA,EAAQE,OAASF,EAAQA,EAAQE,OAAQ,GAAK,GAChEC,EAAU,CACd,CACEpB,MAAO,wBACPG,MAAOe,EAAKG,UACZvB,KAAM,aAER,CACEE,MAAO,YACPG,MAAOe,EAAKI,UACZxB,KAAM,aAER,CACEE,MAAO,eACPG,MAAOe,EAAKK,OACZzB,KAAM,UAIV,OACE,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SAEIN,EAAQO,KAAI,SAAAC,GAAI,OACd,cAACJ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAACzB,EAAD,CAAeL,MAAO4B,EAAK5B,MAAOG,MAAOyB,EAAKzB,MAAOL,KAAM8B,EAAK9B,QADnC8B,EAAK9B,W,+DCuCxCiC,EAAY,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,KAAMc,EAAW,EAAXA,KACvB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,QAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAiCA,OA/BAC,qBAAU,WACN,IAAIC,EAAa,GACjB,OAAQH,GACJ,IAAK,MACDG,EAAarB,EACb,MACJ,IAAK,OACDqB,EAAarB,EAAKsB,MACdtB,EAAKuB,WACD,SAACb,GAAD,OACIA,EAAKc,QACK,iBAATV,EACK,aACA,kBAGlB,MACJ,IAAK,KACDO,EAAarB,EAAKsB,MAAMtB,EAAKC,OAAS,IACtC,MACJ,IAAK,IACDoB,EAAarB,EAAKsB,MAAMtB,EAAKC,OAAS,GACtC,MACJ,QACIoB,EAAarB,EAIrBiB,EA9FgB,SAACjB,EAAMc,GAC3B,IAAMW,EAAazB,EAAKS,KAAI,SAACC,GAAD,OAAUA,EAAKc,QACvCE,EAAO,0BACPC,EAAS,YACb,OAAQb,GACJ,IAAK,mBACDY,EAAO,wBACP,MACJ,IAAK,eACDA,EAAO,0BACPC,EAAS,SAMjB,MAAO,CACHC,MAAO,CACHC,OAAQ,KAEZ/C,MAAO,CACH4C,KAAMA,GAEVI,MAAO,CACHL,WAAYA,EACZM,WAAW,GAEfC,OAAQ,CAAC,WACTC,MAAO,CACHC,IAAK,EACLpD,MAAO,CACH4C,KAAM,MAEVS,OAAQ,CACJC,MAAO,UAGfC,QAAS,CACLC,aACI,yDACJC,YACI,yHAEJC,aAAc,WACdC,QAAQ,EACRC,SAAS,GAEbC,YAAa,CACTC,OAAQ,CACJC,aAAc,GACdC,YAAa,IAGrBnB,OAAQ,CACJ,CACIoB,KAAM,uBACN/C,KAAMA,EAAKS,KAAI,SAACC,GAAD,OAAUA,EAAK,GAAD,OAAIiB,UAsC9BqB,CAAgB3B,EAAYP,MACxC,CAACd,EAAMkB,EAAWJ,IAGjB,gCACI,eAACmC,EAAA,EAAD,CACIC,KAAK,QACLC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,YAF9C,UAII,cAACC,EAAA,EAAD,CACIC,MAAsB,QAAfrC,EAAuB,YAAc,GAC5CsC,QAAS,kBAAMrC,EAAc,QAFjC,8BAMA,cAACmC,EAAA,EAAD,CACIC,MAAsB,SAAfrC,EAAwB,YAAc,GAC7CsC,QAAS,kBAAMrC,EAAc,SAFjC,kBAMA,cAACmC,EAAA,EAAD,CACIC,MAAsB,OAAfrC,EAAsB,YAAc,GAC3CsC,QAAS,kBAAMrC,EAAc,OAFjC,wBAMA,cAACmC,EAAA,EAAD,CACIC,MAAsB,MAAfrC,EAAqB,YAAc,GAC1CsC,QAAS,kBAAMrC,EAAc,MAFjC,0BAOJ,cAAC,IAAD,CAAiBsC,WAAYC,IAAY1C,QAASA,QAK/C2C,MAAMC,KAAK/C,G,0CClI1BgD,IAAcC,KAEd,IAAMC,EAAc,CACjBnC,MAAO,CACJC,OAAQ,OAEX/C,MAAO,CACJ4C,KAAM,MAETsC,cAAe,CACZC,SAAS,GAEZC,OAAQ,CACLpF,MAAO,CACJ4C,KAAM,uBACNyB,MAAO,CACJI,MAEIO,IAAWK,gBACTL,IAAWK,eAAeD,QAC1BJ,IAAWK,eAAeD,OAAOpF,OACjCgF,IAAWK,eAAeD,OAAOpF,MAAMqE,OACvCW,IAAWK,eAAeD,OAAOpF,MAAMqE,MAAMI,OAChD,UAGTa,EAAG,IACHC,EAAG,GACHjC,MAAO,QACPkC,cAAe,MACfC,UAAU,EACVC,OAAQ,WACRC,cAAe,EACfC,gBAEIZ,IAAWK,gBACTL,IAAWK,eAAeD,QAC1BJ,IAAWK,eAAeD,OAAOQ,iBACpC,4BACHC,aAAc,EACdC,aAAc,IAEjB5C,OAAQ,CAAC,OAAQ,UAAW,UAAW,UAAW,UAAW,WAC7D6C,UAAW,CACRC,eAAgB,WAChBC,YAAa,CACV,CACGhC,KAAM,KAET,CACGiC,KAAM,EACNC,GAAI,IAEP,CACGD,KAAM,GACNC,GAAI,KAEP,CACGD,KAAM,KACNC,GAAI,KAEP,CACGD,KAAM,IACNC,GAAI,KAEP,CACGD,KAAM,QAIf3C,QAAS,CACNK,SAAS,EACTH,YACG,4UAMNZ,OAAQ,CACL,CACGoB,KAAM,wCACNmC,OAAQ,CAAC,SAAU,aAKtBC,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,EAA8BrE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOsE,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,iBAAO,MAkCxB,OAhCApE,qBAAU,WACHgE,GAAWK,OAAOC,KAAKN,GAASnF,QCnGJ9B,EAAMwH,IAAI,wBDoGpBC,MAAK,SAACC,GACtB,IAAMC,EAAaD,EAAI7F,KAEvBiB,GAAW,8BAAC,eACN8C,GADK,IAERjF,MAAO,CACJ4C,KAAM,iBAETC,OAAQ,CAAC,2BAEAoC,EAAYpC,OAAO,IAFpB,IAGFyD,QAASA,EACTpF,KAAM8F,UAKVT,GAAWC,GAAa,QAGnC,CAACF,EAASC,IAEbjE,qBAAU,WACHmE,GAAYA,EAASQ,SACtBR,EAASQ,QAAQnE,MAAMD,OAAO,GAAGqE,OAAO,CACrCZ,cAGN,CAACpE,EAASoE,IAERC,EAGF,cAAC,IAAD,CACG5B,WAAYK,IACZ9C,QAASiF,oBAAUjF,GACnBkF,gBAAiB,WACjBC,IAAKZ,IAPY,MAY1BJ,EAASiB,aAAe,CACrBhB,QAAS,IAGGzB,UAAMC,KAAKuB,G,QE9IX,SAASkB,EAAT,GAAuC,IAApBtG,EAAmB,EAAnBA,QAASuG,EAAU,EAAVA,OACxC,OACG,sBAAKhH,UAAU,OAAf,UACG,cAACgB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACG,cAAC,EAAD,CAAUwE,QAASA,MAEtB,eAAC9E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACG,cAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACG,cAAC,EAAD,CAAWZ,KAAMD,EAASe,KAAM,cAGnC,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACG,cAAC,EAAD,CAAWZ,KAAMsG,EAAQxF,KAAM,uBAGlC,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACG,cAAC,EAAD,CAAWZ,KAAMsG,EAAQxF,KAAM,yB,0ECHxCyF,G,MAAe9H,YAAW,CAC7B+H,KAAM,CACH,QAAS,CACNC,aAAc,aAKvB,SAASC,EAAI/H,GACV,IAAQgI,EAAQhI,EAARgI,IAEFC,EAAUL,IAEhB,OACG,mCACG,eAACM,EAAA,EAAD,CAAUvH,UAAWsH,EAAQJ,KAA7B,UACG,cAACM,EAAA,EAAD,CAAWC,UAAU,KAAKC,MAAM,MAAM1H,UAAU,OAAhD,SACIqH,EAAIM,OAER,cAACH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CAASzC,IAAKgH,EAAIO,OAAS,EAAGtH,SAAU,EAAGC,UAAU,QAExD,cAACiH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CAASzC,IAAKgH,EAAIQ,UAAY,EAAGvH,SAAU,EAAGC,UAAU,QAE3D,cAACiH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CAASzC,IAAKgH,EAAIS,UAAY,EAAGxH,SAAU,EAAGC,UAAU,QAE3D,cAACiH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CACGzC,IAAKgH,EAAIU,eAAiB,EAC1BzH,SAAU,EACVC,UAAU,QAGhB,cAACiH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CACGzC,IAAKgH,EAAIW,uBAAyB,EAClC1H,SAAU,EACVC,UAAU,QAGhB,cAACiH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CAASzC,IAAKgH,EAAIY,YAAc,EAAG3H,SAAU,EAAGC,UAAU,QAE7D,cAACiH,EAAA,EAAD,CAAWxH,UAAU,OAAO8C,MAAM,SAAlC,SACG,cAAC,IAAD,CACGzC,IAAKgH,EAAIa,uBAAyB,EAClC5H,SAAU,EACVC,UAAU,aA+Db,SAAS4H,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC9BC,EAAQ,YAAOD,GACf1H,EAAO4H,IAAEC,QAAQF,EAAU,QAAS,QAC1C,OACG,cAACG,EAAA,EAAD,CAAgBf,UAAWgB,IAAOzI,UAAU,YAA5C,SACG,eAAC0I,EAAA,EAAD,CAAOC,aAAW,oBAAlB,UACG,cAACC,EAAA,EAAD,UACG,eAACrB,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,CAAWxH,UAAU,0BAArB,yCAGA,cAACwH,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,4BAGA,cAAC0E,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,gCAGA,cAAC0E,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,gCAGA,cAAC0E,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,gCAGA,cAAC0E,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,yCAGA,cAAC0E,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,4CAGA,cAAC0E,EAAA,EAAD,CAAWxH,UAAU,0BAA0B8C,MAAM,SAArD,sDAMN,cAAC+F,EAAA,EAAD,UACInI,EAAKS,KAAI,SAACC,GAAD,OACP,cAACgG,EAAD,CAAuBC,IAAKjG,GAAlBA,EAAK0H,kB,iCC7JjCC,IAAOC,OAAO,MAoCCC,MAlCf,WACG,MAA8BxH,mBAAS,IAAvC,mBAAOhB,EAAP,KAAgByI,EAAhB,KACA,EAA4BzH,mBAAS,IAArC,mBAAOuF,EAAP,KAAemC,EAAf,KACA,EAA8B1H,mBAAS,IAAvC,mBAAO2G,EAAP,KAAgBgB,EAAhB,KAeA,OAbAtH,qBAAU,WHd2BjD,EAAMwH,IAAI,gBGevBC,MAAK,SAACC,GACxB2C,EAAW3C,EAAI7F,SHda7B,EAAMwH,IAAI,wBGiBvBC,MAAK,SAACC,GACrB4C,EAAU5C,EAAI7F,SHhBU7B,EAAMwH,IAAI,wBGkBvBC,MAAK,SAACC,GACjB6C,EAAW7C,EAAI7F,WAElB,IAGA,eAAC2I,EAAA,EAAD,CAAWxF,MAAO,CAAEyF,UAAW,IAA/B,UACG,cAACpJ,EAAA,EAAD,CAAYE,QAAQ,KAAKD,WAAW,KAApC,wCAGA,cAACD,EAAA,EAAD,UAAa6I,MAASQ,OAAO,SAC7B,cAAC/I,EAAD,CAAWC,QAASA,IACpB,cAACsG,EAAD,CAAStG,QAASA,EAASuG,OAAQA,IACnC,cAAC9G,EAAA,EAAD,CAAYE,QAAQ,KAAKD,WAAW,KAApC,8EAGA,cAAC,EAAD,CAAciI,QAASA,Q,MCrChCoB,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.0ff82158.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n   baseURL: 'https://dungxbuif-covid-tracking.herokuapp.com/',\r\n   headers: { api_key: 'MY_TRACKING_COVID' },\r\n});\r\n\r\nexport default instance;\r\n","import { Card, CardContent, makeStyles, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n   wrapper: (props) => {\r\n      switch (props.type) {\r\n         case 'confirmed':\r\n            return { borderLeft: '5px solid #c9302c' };\r\n         case 'recovered':\r\n            return { borderLeft: '5px solid #28a745' };\r\n         default:\r\n            return { borderLeft: '5px solid gray' };\r\n      }\r\n   },\r\n   title: {\r\n      fontSize: 18,\r\n      marginBottom: 5,\r\n   },\r\n   count: {\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n   },\r\n});\r\n\r\nexport default function HighLightCard({ title, count, type }) {\r\n   const styles = useStyles({ type });\r\n\r\n   return (\r\n      <Card className={styles.wrapper}>\r\n         <CardContent>\r\n            <Typography components=\"p\" variant=\"body2\" className={styles.title}>\r\n               {title}\r\n            </Typography>\r\n            <Typography\r\n               components=\"span\"\r\n               variant=\"body2\"\r\n               className={styles.count}\r\n            >\r\n               <CountUp end={count || 0} duration={3} separator=\" \" />\r\n            </Typography>\r\n         </CardContent>\r\n      </Card>\r\n   );\r\n}\r\n","import HighLightCard from './HighLightCard';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default function HighLight({ history }) {\r\n  const data = history && history.length ? history[history.length -1] : [];\r\n  const summary = [\r\n    {\r\n      title: 'Số ca nhiễm',\r\n      count: data.Confirmed,\r\n      type: 'confirmed', \r\n    },\r\n    {\r\n      title: 'Khỏi',\r\n      count: data.Recovered,\r\n      type: 'recovered', \r\n    },\r\n    {\r\n      title: 'Tử vong',\r\n      count: data.Deaths,\r\n      type: 'death', \r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Grid container spacing={3} >\r\n      {\r\n        summary.map(item => \r\n          <Grid item sm={4} xs={12} key={item.type} >\r\n            <HighLightCard title={item.title} count={item.count} type={item.type} />\r\n          </Grid> \r\n        )\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n","import HighchartsReact from \"highcharts-react-official\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport HighCharts from \"highcharts\";\r\n\r\nconst generateOptions = (data, kind) => {\r\n    const categories = data.map((item) => item.Date);\r\n    let text = \"Tổng ca nhiễm\";\r\n    let series = \"Confirmed\";\r\n    switch (kind) {\r\n        case \"perday-confirmed\":\r\n            text = \"Số ca nhiễm\";\r\n            break;\r\n        case \"perday-death\":\r\n            text = \"Số ca tử vong\";\r\n            series = \"Deaths\";\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        chart: {\r\n            height: 500,\r\n        },\r\n        title: {\r\n            text: text,\r\n        },\r\n        xAxis: {\r\n            categories: categories,\r\n            crosshair: true,\r\n        },\r\n        colors: [\"#F3585B\"],\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: null,\r\n            },\r\n            labels: {\r\n                align: \"right\",\r\n            },\r\n        },\r\n        tooltip: {\r\n            headerFormat:\r\n                '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n            pointFormat:\r\n                '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\r\n            footerFormat: \"</table>\",\r\n            shared: true,\r\n            useHTML: true,\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                pointPadding: 0.2,\r\n                borderWidth: 0,\r\n            },\r\n        },\r\n        series: [\r\n            {\r\n                name: \"Tổng số ca\",\r\n                data: data.map((item) => item[`${series}`]),\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\nconst LineChart = ({ data, kind }) => {\r\n    const [options, setOptions] = useState({});\r\n    const [reportType, setReportType] = useState(\"2021\");\r\n\r\n    useEffect(() => {\r\n        let customData = [];\r\n        switch (reportType) {\r\n            case \"all\":\r\n                customData = data;\r\n                break;\r\n            case \"2021\":\r\n                customData = data.slice(\r\n                    data.findIndex(\r\n                        (item) =>\r\n                            item.Date ===\r\n                            (kind === \"perday-death\"\r\n                                ? \"14/05/2021\"\r\n                                : \"01/01/2021\")\r\n                    )\r\n                );\r\n                break;\r\n            case \"30\":\r\n                customData = data.slice(data.length - 30);\r\n                break;\r\n            case \"7\":\r\n                customData = data.slice(data.length - 7);\r\n                break;\r\n            default:\r\n                customData = data;\r\n                break;\r\n        }\r\n\r\n        setOptions(generateOptions(customData, kind));\r\n    }, [data, reportType,kind]);\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup\r\n                size=\"small\"\r\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n                <Button\r\n                    color={reportType === \"all\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"all\")}\r\n                >\r\n                    Tất cả\r\n                </Button>\r\n                <Button\r\n                    color={reportType === \"2021\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"2021\")}\r\n                >\r\n                    2021\r\n                </Button>\r\n                <Button\r\n                    color={reportType === \"30\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"30\")}\r\n                >\r\n                    30 ngày\r\n                </Button>\r\n                <Button\r\n                    color={reportType === \"7\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"7\")}\r\n                >\r\n                    7 ngày\r\n                </Button>\r\n            </ButtonGroup>\r\n            <HighchartsReact highcharts={HighCharts} options={options} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(LineChart);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from 'highcharts/modules/map';\r\nimport Highcharts from 'highcharts';\r\nimport { cloneDeep } from 'lodash';\r\nimport { getDetailVnLocal } from '../../apis';\r\n\r\n// Load Highcharts modules\r\nhighchartsMap(Highcharts);\r\n\r\nconst initOptions = {\r\n   chart: {\r\n      height: '650',\r\n   },\r\n   title: {\r\n      text: null,\r\n   },\r\n   mapNavigation: {\r\n      enabled: true,\r\n   },\r\n   legend: {\r\n      title: {\r\n         text: 'Số ca mắc ',\r\n         style: {\r\n            color:\r\n               // theme\r\n               (Highcharts.defaultOptions &&\r\n                  Highcharts.defaultOptions.legend &&\r\n                  Highcharts.defaultOptions.legend.title &&\r\n                  Highcharts.defaultOptions.legend.title.style &&\r\n                  Highcharts.defaultOptions.legend.title.style.color) ||\r\n               'black',\r\n         },\r\n      },\r\n      y: 100,\r\n      x: 10,\r\n      align: 'right',\r\n      verticalAlign: 'top',\r\n      floating: true,\r\n      layout: 'vertical',\r\n      valueDecimals: 0,\r\n      backgroundColor:\r\n         // theme\r\n         (Highcharts.defaultOptions &&\r\n            Highcharts.defaultOptions.legend &&\r\n            Highcharts.defaultOptions.legend.backgroundColor) ||\r\n         'rgba(255, 255, 255, 0.85)',\r\n      symbolRadius: 0,\r\n      symbolHeight: 14,\r\n   },\r\n   colors: ['#FFF', '#FFC4AA', '#FF8A66', '#FF392B', '#B71525', '#7A0826'],\r\n   colorAxis: {\r\n      dataClassColor: 'category',\r\n      dataClasses: [\r\n         {\r\n            name: '0',\r\n         },\r\n         {\r\n            from: 1,\r\n            to: 50,\r\n         },\r\n         {\r\n            from: 51,\r\n            to: 1000,\r\n         },\r\n         {\r\n            from: 1001,\r\n            to: 3000,\r\n         },\r\n         {\r\n            from: 3000,\r\n            to: 6000,\r\n         },\r\n         {\r\n            from: 6001,\r\n         },\r\n      ],\r\n   },\r\n   tooltip: {\r\n      useHTML: true,\r\n      pointFormat:\r\n         '<div style=\"text-align: center;color:black\">' +\r\n         '<span style=\"text-align: center;\"><b>{point.localname}</b></span></div>' +\r\n         '<div style=\"color:black\"> <b>Nhiễm bệnh: <span >{point.value}</span></b> <br/>' +\r\n         '<b>Phục hồi: <span >{point.socakhoi}</span> </b><br/> ' +\r\n         '<b>Tử vong: <span >{point.socatuvong}</span></b>\t</div>',\r\n   },\r\n   series: [\r\n      {\r\n         name: 'SỐ LIỆU CÁC CA BỆNH',\r\n         joinBy: ['hc-key', 'hc-key'],\r\n      },\r\n   ],\r\n};\r\n\r\nconst HighMaps = ({ mapData }) => {\r\n   const [options, setOptions] = useState({});\r\n   const [mapLoaded, setMapLoaded] = useState(false);\r\n   const chartRef = useRef(null);\r\n\r\n   useEffect(() => {\r\n      if (mapData && Object.keys(mapData).length) {\r\n         getDetailVnLocal().then((res) => {\r\n            const detailData = res.data;\r\n\r\n            setOptions(() => ({\r\n               ...initOptions,\r\n               title: {\r\n                  text: 'Việt Nam',\r\n               },\r\n               series: [\r\n                  {\r\n                     ...initOptions.series[0],\r\n                     mapData: mapData,\r\n                     data: detailData,\r\n                  },\r\n               ],\r\n            }));\r\n\r\n            if (!mapLoaded) setMapLoaded(true);\r\n         });\r\n      }\r\n   }, [mapData, mapLoaded]);\r\n\r\n   useEffect(() => {\r\n      if (chartRef && chartRef.current) {\r\n         chartRef.current.chart.series[0].update({\r\n            mapData,\r\n         });\r\n      }\r\n   }, [options, mapData]);\r\n\r\n   if (!mapLoaded) return null;\r\n\r\n   return (\r\n      <HighchartsReact\r\n         highcharts={Highcharts}\r\n         options={cloneDeep(options)}\r\n         constructorType={'mapChart'}\r\n         ref={chartRef}\r\n      />\r\n   );\r\n};\r\n\r\nHighMaps.defaultProps = {\r\n   mapData: {},\r\n};\r\n\r\nexport default React.memo(HighMaps);\r\n","import axios from './axiosClient';\r\n\r\nexport const getDetailVnLocal = () => axios.get('/api/detail-local-vn');\r\n\r\nexport const getReportByCountry = () => axios.get('/api/history');\r\n\r\nexport const getReportPerDay = () => axios.get('/api/history-per-day');\r\n\r\nexport const getVaccines = () => axios.get('/api/vaccine-details');\r\n","import React from 'react';\r\nimport LineChart from './Charts/LineChart';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HighMaps from './Charts/HighMaps';\r\nimport mapData from '@highcharts/map-collection/countries/vn/vn-all.geo.json';\r\n\r\nexport default function Summary({ history, perday }) {\r\n   return (\r\n      <div className=\"my-5\">\r\n         <Grid item sm={12} xs={12}>\r\n            <HighMaps mapData={mapData} />\r\n         </Grid>\r\n         <Grid container spacing={3}>\r\n            <Grid item sm={12} xs={12}>\r\n               <LineChart data={history} kind={'history'} />\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n               <LineChart data={perday} kind={'perday-confirmed'} />\r\n            </Grid>\r\n\r\n            <Grid item sm={6} xs={12}>\r\n               <LineChart data={perday} kind={'perday-death'} />\r\n            </Grid>\r\n         </Grid>\r\n      </div>\r\n   );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n// import KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport './TableVaccine.scss';\r\nimport CountUp from 'react-countup';\r\nimport _ from 'lodash';\r\nconst useRowStyles = makeStyles({\r\n   root: {\r\n      '& > *': {\r\n         borderBottom: 'unset',\r\n      },\r\n   },\r\n});\r\n\r\nfunction Row(props) {\r\n   const { row } = props;\r\n   // const [open, setOpen] = React.useState(false);\r\n   const classes = useRowStyles();\r\n\r\n   return (\r\n      <>\r\n         <TableRow className={classes.root}>\r\n            <TableCell component=\"th\" scope=\"row\" className=\"py-2\">\r\n               {row.tinh}\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp end={row.danso || 0} duration={3} separator=\".\" />\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp end={row.tiemmui1 || 0} duration={3} separator=\".\" />\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp end={row.tiemmui2 || 0} duration={3} separator=\".\" />\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp\r\n                  end={row.tongmuidatiem || 0}\r\n                  duration={3}\r\n                  separator=\".\"\r\n               />\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp\r\n                  end={row.tongsovaccineduocphan || 0}\r\n                  duration={3}\r\n                  separator=\".\"\r\n               />\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp end={row.sodiemtiem || 0} duration={3} separator=\".\" />\r\n            </TableCell>\r\n            <TableCell className=\"py-2\" align=\"center\">\r\n               <CountUp\r\n                  end={row.soloaivaccinephanphoi || 0}\r\n                  duration={3}\r\n                  separator=\".\"\r\n               />\r\n            </TableCell>\r\n            {/* <TableCell className=\"py-2\" align=\"right\">\r\n               {open ? 'Thu gọn ' : 'Chi tiết '}\r\n               <IconButton\r\n                  aria-label=\"expand row\"\r\n                  size=\"small\"\r\n                  onClick={() => setOpen(!open)}\r\n               >\r\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n               </IconButton>\r\n            </TableCell> */}\r\n         </TableRow>\r\n         {/* <TableRow>\r\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n               <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                  <Box\r\n                     margin={1}\r\n                     style={{ borderTop: '1px solid rgb(234 234 234)' }}\r\n                  >\r\n                     <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Các loại vaccines được phân bổ\r\n                     </Typography>\r\n                     <Table size=\"small\" aria-label=\"purchases\">\r\n                        <TableHead className=\".bg-info\">\r\n                           <TableRow>\r\n                              {row.dsvaccine.map((ele) => (\r\n                                 <TableCell\r\n                                    key={ele.id}\r\n                                    className=\"text-white bg-info\"\r\n                                 >\r\n                                    {ele.name}\r\n                                 </TableCell>\r\n                              ))}\r\n                           </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                           <TableRow>\r\n                              {row.dsvaccine.map((ele) => (\r\n                                 <TableCell\r\n                                    key={ele.id}\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                 >\r\n                                    <CountUp\r\n                                       end={ele.totalAllocated || 0}\r\n                                       duration={3}\r\n                                       separator=\".\"\r\n                                    />\r\n                                 </TableCell>\r\n                              ))}\r\n                           </TableRow>\r\n                        </TableBody>\r\n                     </Table>\r\n                  </Box>\r\n               </Collapse>\r\n            </TableCell>\r\n         </TableRow> */}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default function TableVaccine({ vaccine }) {\r\n   const tmpDdata = [...vaccine];\r\n   const data = _.orderBy(tmpDdata, 'danso', 'desc');\r\n   return (\r\n      <TableContainer component={Paper} className=\"my-5 wrap\">\r\n         <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n               <TableRow>\r\n                  <TableCell className=\"text-white bg-dark py-3\">\r\n                     Tỉnh/Thành phố\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Dân số\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Tiêm mũi 1\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Tiêm mũi 2\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Đã tiêm\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Được phân\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Số điểm tiêm\r\n                  </TableCell>\r\n                  <TableCell className=\"text-white bg-dark py-3\" align=\"center\">\r\n                     Dự kiến phân phối\r\n                  </TableCell>\r\n                  {/* <TableCell className=\"text-white bg-dark py-3\" /> */}\r\n               </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {data.map((item) => (\r\n                  <Row key={item.matinh} row={item} />\r\n               ))}\r\n            </TableBody>\r\n         </Table>\r\n      </TableContainer>\r\n   );\r\n}\r\n","import { getReportByCountry, getReportPerDay, getVaccines } from './apis';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HighLight from './components/HighLight';\r\nimport { Container } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport Summary from './components/Summary';\r\nimport TableVaccine from './components/TableVaccine';\r\nimport moment from 'moment';\r\nimport '@fontsource/roboto';\r\nimport 'moment/locale/vi';\r\n\r\nmoment.locale('vi');\r\n\r\nfunction App() {\r\n   const [history, setHistory] = useState([]);\r\n   const [perday, setPerDay] = useState([]);\r\n   const [vaccine, setVaccine] = useState([]);\r\n\r\n   useEffect(() => {\r\n      getReportByCountry().then((res) => {\r\n         setHistory(res.data);\r\n      });\r\n\r\n      getReportPerDay().then((res) => {\r\n         setPerDay(res.data);\r\n      });\r\n      getVaccines().then((res) => {\r\n         setVaccine(res.data);\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <Container style={{ marginTop: 20 }}>\r\n         <Typography variant=\"h2\" components=\"h2\">\r\n            Số liệu COVID-19\r\n         </Typography>\r\n         <Typography>{moment().format('LLL')}</Typography>\r\n         <HighLight history={history} />\r\n         <Summary history={history} perday={perday} />\r\n         <Typography variant=\"h3\" components=\"h3\">\r\n            Số liệu tiêm chủng vaccines ngừa COVID-19\r\n         </Typography>\r\n         <TableVaccine vaccine={vaccine} />\r\n      </Container>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/styles.scss';\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <App />\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}